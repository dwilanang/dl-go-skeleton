-- +goose Up
-- +goose StatementBegin
CREATE TABLE "users" (
    "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    "uuid" uuid DEFAULT gen_random_uuid(),
    "username" varchar UNIQUE,
    "password_hash" varchar,
    "full_name" varchar,
    "role_id" int,
    "created_by" int,
    "updated_by" int,
    "created_at" timestamp,
    "updated_at" timestamp
);

CREATE TABLE "roles" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar UNIQUE NOT NULL,
  "privilege" text,
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "user_salaries" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "amount" NUMERIC(15,2) NOT NULL,
  "effective_from" date,
  "effective_to" date,
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "attendance_periods" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "start_date" date,
  "end_date" date,
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "attendances" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "date_attendance" date,
  "period_id" int,
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "overtimes" (
  "id" int GENERATED BY DEFAULT AS IDENTITY,
  "user_id" int,
  "date_overtime" date,
  "period_id" int,
  "hours" NUMERIC(3,1) NOT NULL CHECK (hours <= 3.0),
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp,
  PRIMARY KEY ("id", "user_id")
);

CREATE TABLE "reimbursements" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "period_id" int,
  "amount" NUMERIC(15,2) NOT NULL,
  "description" text,
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TYPE payrolls_status AS ENUM ('pending', 'processed');

CREATE TABLE "payrolls" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "period_id" int UNIQUE,
  "status" payrolls_status,
  "processed_at" timestamp,
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "payslips" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "payroll_id" int,
  "attendance_days" int,
  "salary_component" NUMERIC(15,2) NOT NULL,
  "overtime_hours" NUMERIC(5,2) NOT NULL,
  "overtime_component" NUMERIC(15,2) NOT NULL,
  "reimbursement_component" NUMERIC(15,2) NOT NULL,
  "total" NUMERIC(15,2) NOT NULL,
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

CREATE TABLE "audit_logs" (
  "id" int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "user_id" int,
  "action" varchar,
  "table_name" varchar,
  "record_id" int,
  "ip_address" varchar,
  "request_id" varchar,
  "created_by" int,
  "updated_by" int,
  "created_at" timestamp,
  "updated_at" timestamp
);

ALTER TABLE "users" ADD FOREIGN KEY ("role_id") REFERENCES "roles" ("id");

ALTER TABLE "user_salaries" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "attendance_periods" ADD FOREIGN KEY ("created_by") REFERENCES "users" ("id");

ALTER TABLE "attendances" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "attendances" ADD FOREIGN KEY ("period_id") REFERENCES "attendance_periods" ("id");

ALTER TABLE "overtimes" ADD FOREIGN KEY ("period_id") REFERENCES "attendance_periods" ("id");

ALTER TABLE "reimbursements" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "reimbursements" ADD FOREIGN KEY ("period_id") REFERENCES "attendance_periods" ("id");

ALTER TABLE "payrolls" ADD FOREIGN KEY ("period_id") REFERENCES "attendance_periods" ("id");

ALTER TABLE "payrolls" ADD FOREIGN KEY ("processed_by") REFERENCES "users" ("id");

ALTER TABLE "payslips" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "payslips" ADD FOREIGN KEY ("payroll_id") REFERENCES "payrolls" ("id");

ALTER TABLE "audit_logs" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");
-- +goose StatementEnd

-- +goose Down
-- +goose StatementBegin
DROP TABLE IF EXISTS payslips;
DROP TABLE IF EXISTS reimbursements;
DROP TABLE IF EXISTS overtimes;
DROP TABLE IF EXISTS attendances;
DROP TABLE IF EXISTS audit_logs;
DROP TABLE IF EXISTS payrolls;
DROP TABLE IF EXISTS user_salaries;
DROP TABLE IF EXISTS attendance_periods;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS roles;
-- +goose StatementEnd

basePath: /api/v1
definitions:
  dto.AuthRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.AuthResponse:
    properties:
      expire:
        type: string
      token:
        type: string
      type:
        type: string
    type: object
  dto.RoleRequest:
    properties:
      name:
        type: string
      privilege:
        type: string
    required:
    - name
    - privilege
    type: object
  dto.RoleResponse:
    properties:
      data: {}
      message:
        type: string
    type: object
  dto.UserData:
    properties:
      full_name:
        type: string
      username:
        type: string
    type: object
  dto.UserRequest:
    properties:
      by:
        type: integer
      full_name:
        type: string
      password:
        type: string
      role_id:
        type: integer
      username:
        type: string
    required:
    - full_name
    - password
    - role_id
    - username
    type: object
  dto.UserResponse:
    properties:
      data:
        $ref: '#/definitions/dto.UserData'
    type: object
host: localhost:8000
info:
  contact: {}
  description: go skeleton project API
  title: GO SKELETON API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT token
      parameters:
      - description: Login credentials
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /roles/all:
    get:
      consumes:
      - application/json
      description: Get list of all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.RoleResponse'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Get all roles
      tags:
      - roles
  /roles/create:
    post:
      consumes:
      - application/json
      description: Create a new roles
      parameters:
      - description: Roles create payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.RoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RoleResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create roles
      tags:
      - roles
  /roles/delete/{id}:
    delete:
      consumes:
      - application/json
      description: Delete roles
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RoleResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Delete roles
      tags:
      - roles
  /roles/update/{id}:
    put:
      consumes:
      - application/json
      description: Update a new roles
      parameters:
      - description: Role ID
        in: path
        name: id
        required: true
        type: integer
      - description: Roles update payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.RoleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.RoleResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Update roles
      tags:
      - roles
  /users/register:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User registration payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/dto.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Register user
      tags:
      - user
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
